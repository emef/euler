;Using names.txt (right click and 'Save Link/Target As...'), a 46K
;text file containing over five-thousand first names, begin by sorting
;it into alphabetical order. Then working out the alphabetical value
;for each name, multiply this value by its alphabetical position in
;the list to obtain a name score.

;For example, when the list is sorted into alphabetical order, COLIN,
;which is worth 3 + 15 + 12 + 9 + 14 = 53, is the 938th name in the
;list. So, COLIN would obtain a score of 938 53 = 49714.

;What is the total of all the name scores in the file?



(defparameter *names* (sort (with-open-file (str "names.txt" :direction :input)
                              (read str))
                            #'string<))

(defun string-score (str)
  (let ((score 0))
    (dotimes (i (length str))
      (incf score (1+ (- (char-code (char str i))
                         (char-code #\A)))))
    score))

(defun names-total-score (lst &optional (score 0) (n 1))
  (if (null lst)
      score
      (progn
        (format t "~A  ~A * ~A = ~A~%" (car lst) n (string-score (car lst)) (+ score (* n (string-score (car lst)))))
        (names-total-score (cdr lst) 
                           (+ score (* n (string-score (car lst))))
                           (1+ n)))))